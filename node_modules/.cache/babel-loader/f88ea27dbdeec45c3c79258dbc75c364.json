{"ast":null,"code":"import _classCallCheck from\"/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/7/webd171-7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/7/webd171-7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/7/webd171-7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/7/webd171-7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./VideoInfoBox.scss';import{Image,Button,Divider}from'semantic-ui-react';import Linkify from'react-linkify';import{getPublishedAtDateString}from'../../services/date/date-format';import{getShortNumberString}from'../../services/number/number-format';export var VideoInfoBox=/*#__PURE__*/function(_React$Component){_inherits(VideoInfoBox,_React$Component);var _super=_createSuper(VideoInfoBox);function VideoInfoBox(props){var _this;_classCallCheck(this,VideoInfoBox);_this=_super.call(this,props);_this.onToggleCollapseButtonClick=function(){_this.setState(function(prevState){return{collapsed:!prevState.collapsed};});};_this.state={collapsed:true};return _this;}_createClass(VideoInfoBox,[{key:\"render\",value:function render(){if(!this.props.video||!this.props.channel){return/*#__PURE__*/React.createElement(\"div\",null);}var descriptionParagraphs=this.getDescriptionParagraphs();var _this$getConfig=this.getConfig(),descriptionTextClass=_this$getConfig.descriptionTextClass,buttonTitle=_this$getConfig.buttonTitle;var publishedAtString=getPublishedAtDateString(this.props.video.snippet.publishedAt);var channel=this.props.channel;var buttonText=this.getSubscriberButtonText();var channelThumbnail=channel.snippet.thumbnails.medium.url;var channelTitle=channel.snippet.title;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"video-info-box\"},/*#__PURE__*/React.createElement(Image,{className:\"channel-image\",src:channelThumbnail,circular:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"video-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"channel-name\"},channelTitle),/*#__PURE__*/React.createElement(\"div\",{className:\"video-publication-date\"},publishedAtString)),/*#__PURE__*/React.createElement(Button,{className:\"subscribe\",color:\"youtube\"},buttonText),/*#__PURE__*/React.createElement(\"div\",{className:\"video-description\"},/*#__PURE__*/React.createElement(\"div\",{className:descriptionTextClass},descriptionParagraphs),/*#__PURE__*/React.createElement(Button,{compact:true,onClick:this.onToggleCollapseButtonClick},buttonTitle))),/*#__PURE__*/React.createElement(Divider,null));}},{key:\"getDescriptionParagraphs\",value:function getDescriptionParagraphs(){var videoDescription=this.props.video.snippet?this.props.video.snippet.description:null;if(!videoDescription){return null;}return videoDescription.split('\\n').map(function(paragraph,index){return/*#__PURE__*/React.createElement(\"p\",{key:index},/*#__PURE__*/React.createElement(Linkify,null,paragraph));});}},{key:\"getSubscriberButtonText\",value:function getSubscriberButtonText(){var channel=this.props.channel;var parsedSubscriberCount=Number(channel.statistics.subscriberCount);var subscriberCount=getShortNumberString(parsedSubscriberCount);return\"\".concat(subscriberCount,\" Subscribers\");}},{key:\"getConfig\",value:function getConfig(){var descriptionTextClass='collapsed';var buttonTitle='Show More';if(!this.state.collapsed){descriptionTextClass='expanded';buttonTitle='Show Less';}return{descriptionTextClass,buttonTitle};}}]);return VideoInfoBox;}(React.Component);","map":{"version":3,"sources":["/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/7/webd171-7/src/components/VideoInfoBox/VideoInfoBox.js"],"names":["React","Image","Button","Divider","Linkify","getPublishedAtDateString","getShortNumberString","VideoInfoBox","props","onToggleCollapseButtonClick","setState","prevState","collapsed","state","video","channel","descriptionParagraphs","getDescriptionParagraphs","getConfig","descriptionTextClass","buttonTitle","publishedAtString","snippet","publishedAt","buttonText","getSubscriberButtonText","channelThumbnail","thumbnails","medium","url","channelTitle","title","videoDescription","description","split","map","paragraph","index","parsedSubscriberCount","Number","statistics","subscriberCount","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './VideoInfoBox.scss';\nimport {Image, Button, Divider} from 'semantic-ui-react';\nimport Linkify from 'react-linkify';\nimport {getPublishedAtDateString} from '../../services/date/date-format';\nimport {getShortNumberString} from '../../services/number/number-format';\n\nexport class VideoInfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  render() {\n    if (!this.props.video || !this.props.channel) {\n      return <div/>;\n    }\n\n    const descriptionParagraphs = this.getDescriptionParagraphs();\n    const {descriptionTextClass, buttonTitle} = this.getConfig();\n    const publishedAtString = getPublishedAtDateString(this.props.video.snippet.publishedAt);\n\n    const {channel} = this.props;\n    const buttonText = this.getSubscriberButtonText();\n    const channelThumbnail = channel.snippet.thumbnails.medium.url;\n    const channelTitle = channel.snippet.title;\n\n    return (\n      <div>\n        <div className='video-info-box'>\n          <Image className='channel-image' src={channelThumbnail} circular/>\n          <div className=\"video-info\">\n            <div className='channel-name'>{channelTitle}</div>\n            <div className='video-publication-date'>{publishedAtString}</div>\n          </div>\n          <Button className='subscribe' color='youtube'>{buttonText}</Button>\n          <div className=\"video-description\">\n            <div className={descriptionTextClass}>\n              {descriptionParagraphs}\n            </div>\n            <Button compact onClick={this.onToggleCollapseButtonClick}>{buttonTitle}</Button>\n          </div>\n        </div>\n        <Divider/>\n      </div>\n    );\n  }\n\n  onToggleCollapseButtonClick = () => {\n    this.setState((prevState) => {\n      return {\n        collapsed: !prevState.collapsed\n      };\n    });\n  };\n\n  getDescriptionParagraphs() {\n    const videoDescription = this.props.video.snippet ? this.props.video.snippet.description : null;\n    if (!videoDescription) {\n      return null;\n    }\n    return videoDescription.split('\\n').map((paragraph, index) => <p key={index}><Linkify>{paragraph}</Linkify></p>);\n  }\n\n  getSubscriberButtonText() {\n    const {channel} = this.props;\n    const parsedSubscriberCount = Number(channel.statistics.subscriberCount);\n    const subscriberCount = getShortNumberString(parsedSubscriberCount);\n    return `${subscriberCount} Subscribers`;\n  }\n\n  getConfig() {\n    let descriptionTextClass = 'collapsed';\n    let buttonTitle = 'Show More';\n    if (!this.state.collapsed) {\n      descriptionTextClass = 'expanded';\n      buttonTitle = 'Show Less';\n    }\n    return {\n      descriptionTextClass,\n      buttonTitle\n    };\n  }\n}"]},"metadata":{},"sourceType":"module"}