{"version":3,"sources":["assets/images/logo.png","assets/images/Icon5.png","store/actions/index.js","store/actions/video.js","containers/SideBar/SideBarItem/SideBarItem.js","containers/SideBar/SideBarHeader/SideBarHeader.js","containers/SideBar/SideBarFooter/SideBarFooter.js","containers/SideBar/SideBar.js","components/VideoGrid/VideoGridHeader/VideoGridHeader.js","services/number/number-format.js","services/date/date-format.js","components/VideoPreview/VideoPreview.js","components/VideoGrid/VideoGrid.js","store/actions/watch.js","services/url/index.js","store/reducers/videos.js","store/api/youtube-api-response-types.js","components/InfiniteScroll/InfiniteScroll.js","containers/Home/HomeContent/HomeContent.js","store/actions/api.js","store/reducers/api.js","containers/Home/Home.js","containers/HeaderNav/HeaderNav.js","components/ScrollToTop/ScrollToTop.js","components/AppLayout/AppLayout.js","components/Video/Video.js","components/Rating/Rating.js","components/VideoMetadata/VideoMetadata.js","components/VideoInfoBox/VideoInfoBox.js","containers/Comments/CommentsHeader/CommentsHeader.js","containers/Comments/Comment/Comment.js","containers/Comments/Comments.js","components/RelatedVideos/NextUpVideo/NextUpVideo.js","components/RelatedVideos/RelatedVideos.js","store/reducers/channels.js","store/actions/comment.js","store/reducers/comments.js","containers/Watch/WatchContent/WatchContent.js","containers/Watch/Watch.js","components/VideoList/VideoList.js","containers/Trending/Trending.js","store/actions/search.js","store/reducers/search.js","containers/Search/Search.js","App.js","reportWebVitals.js","store/reducers/index.js","store/api/youtube-api.js","store/sagas/video.js","store/sagas/watch.js","store/sagas/comment.js","store/sagas/search.js","store/sagas/index.js","index.js","store/configureStore.js"],"names":["module","exports","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","Error","reduce","acc","type","createAction","payload","VIDEO_CATEGORIES","categories","request","success","response","failure","MOST_POPULAR","mostPopular","amount","loadDescription","nextPageToken","MOST_POPULAR_BY_CATEGORY","mostPopularByCategory","SideBarItem","highlight","this","shouldBeHighlighted","to","pathname","props","path","Menu","Item","className","join","Icon","size","name","icon","label","location","includes","React","Component","withRouter","SideBarHeader","heading","title","toUpperCase","Image","src","require","Header","SideBarFooter","Fragment","SideBar","borderless","vertical","stackable","fixed","Divider","VideoGridHeader","UNITS","getShortNumberString","number","digits","some","element","index","lowerBound","Math","pow","i","length","decimal","toFixed","toString","objMap","numbers","datePattern","timePattern","pattern","RegExp","getVideoDurationString","iso8601DurationString","match","slice","prev","next","idx","parseFloat","days","hours","minutes","seconds","secondsString","minutesString","accumulatedHours","padStart","TimeAgo","locale","en","timeAgo","VideoPreview","video","videoDuration","contentDetails","duration","viewAndTimeString","getFormattedViewAndTime","horizontal","expanded","description","snippet","search","thumbnails","medium","url","channelTitle","publicationDate","Date","publishedAt","statistics","viewCount","viewCountShort","format","VideoGrid","videos","gridItems","map","key","id","divider","hideDivider","WATCH_DETAILS","details","videoId","channelId","VIDEO_DETAILS","videoDetails","getSearchParam","URLSearchParams","get","initialState","byId","byCategory","related","reduceFetchMostPopularVideos","prevState","videoMap","items","accumulator","Object","keys","hasOwnProperty","totalResults","pageInfo","reduceFetchVideoCategories","categoryMapping","category","reduceFetchMostPopularVideosByCategory","responses","byCategoryMap","forEach","status","categoryId","push","groupVideosByIdAndCategory","result","reduceWatchDetails","find","r","kind","relatedEntry","relatedVideoIds","reduceRelatedVideosRequest","reduceVideoDetails","parsedVideos","filter","getMostPopular","state","getMostPopularVideos","createSelector","videosById","getVideoCategoryIds","getVideosByCategory","videosByCategory","videoIds","videoCategoriesLoaded","videosByCategoryLoaded","getVideoById","getRelatedVideos","getChannelId","getAmountComments","commentCount","allMostPopularVideosLoaded","getMostPopularVideosNextPageToken","InfiniteScroll","children","onEnter","bottomReachedCallback","Loader","active","showLoader","inline","HomeContent","trendingVideos","getTrendingVideos","categoryGrids","getVideoGridsForCategories","mostPopularVideos","categoryTitles","categoryTitle","connect","youtubeLibraryLoaded","bind","libraryLoaded","getYoutubeLibraryLoaded","api","Home","fetchVideosByCategory","categoryIndex","shouldShowLoader","fetchCategoriesAndMostPopularVideos","prevProps","videoCategories","categoryStartIndex","fetchMostPopularVideosByCategory","setState","fetchMostPopularVideos","fetchVideoCategories","dispatch","videoActions","bindActionCreators","HeaderNav","onInputChange","event","query","target","value","onSubmit","escapedSearchQuery","encodeURI","history","header","logo","alt","Form","Field","Input","placeholder","action","onChange","ScrollToTop","window","scrollTo","AppLayout","Video","embedUrl","frameBorder","allow","allowFullScreen","Rating","rating","likeCount","dislikeCount","amountLikes","amountDislikes","percentagePositiveRatings","Progress","percent","VideoMetadata","Number","toLocaleString","VideoInfoBox","onToggleCollapseButtonClick","collapsed","channel","iso8601DateString","descriptionParagraphs","getDescriptionParagraphs","getConfig","descriptionTextClass","buttonTitle","publishedAtString","parse","toDateString","buttonText","getSubscriberButtonText","channelThumbnail","circular","Button","color","compact","onClick","videoDescription","split","paragraph","subscriberCount","CommentsHeader","basic","amountComments","Comment","comment","topLevelComment","authorProfileImageUrl","authorDisplayName","textOriginal","Comments","comments","NextUpVideo","RelatedVideos","nextUpVideo","relatedVideosPreviews","relatedVideo","channelResponse","channels","channelEntry","getChannel","COMMENT_THREAD","thread","byVideo","reduceCommentThread","res","newComments","item","prevCommentIds","ids","commentIds","byVideoComment","getCommentsForVideo","allComments","commentId","getCommentNextPageToken","WatchContent","relatedVideos","Watch","fetchMoreComments","fetchCommentThread","getVideoId","fetchWatchContent","fetchWatchDetails","watchActions","commentActions","VideoList","videoPreviews","getVideoPreviews","Trending","fetchMoreVideos","fetchTrendingVideos","loaderActive","SEARCH_FOR_VIDEOS","forVideos","searchQuery","reduceSearchForVideos","searchResults","results","concat","getSearchResults","getSearchNextPageToken","Search","searchForVideos","getSearchQuery","youtubeApiLoaded","searchActions","App","component","render","loadYoutubeApi","script","document","createElement","onload","gapi","load","client","setApiKey","process","body","appendChild","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","buildMostPopularVideosRequest","videoCategoryId","fields","buildApiRequest","part","chart","maxResults","regionCode","pageToken","buildVideoDetailRequest","buildChannelRequest","buildCommentThreadRequest","buildSearchRequest","q","buildRelatedVideosRequest","amountRelatedVideos","relatedToVideoId","requestMethod","params","properties","p","removeEmptyParams","resource","normalizedProps","substr","adjustedName","replace","prop","propArray","ref","pa","createResource","watchMostPopularVideos","watchVideoCategories","watchMostPopularVideosByCategory","fetchEntity","requests","wrapper","ignoreErrors","call","all","put","take","fork","takeEvery","fetchVideoDetails","watchWatchDetails","fn","shouldFetchChannelInfo","searchListResponse","relatedVideoId","videoDetailResponse","watchCommentThread","watchSearchForVideos","entity","args","ignoreErrorCallback","config","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","run","rootSaga","configureStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.07650c70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa6c55a6.png\";","module.exports = __webpack_public_path__ + \"static/media/Icon5.9cf01e14.png\";","export const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport function createRequestTypes(base) {\n  if (!base) {\n    throw new Error('cannot create request type with base = \\'\\' or base = null');\n  }\n  return [REQUEST, SUCCESS, FAILURE].reduce((acc, type) => {\n    acc[type] = `${base}_${type}`;\n    return acc;\n  }, {});\n}\n\nexport function createAction(type, payload = {}) {\n  return {\n    type,\n    ...payload,\n  };\n}","import {createAction, createRequestTypes, REQUEST, SUCCESS, FAILURE} from './index';\n\nexport const VIDEO_CATEGORIES = createRequestTypes('VIDEO_CATEGORIES');\nexport const categories = {\n  request: () => createAction(VIDEO_CATEGORIES[REQUEST]),\n  success: (response) => createAction(VIDEO_CATEGORIES[SUCCESS], {response}),\n  failure: (response) => createAction(VIDEO_CATEGORIES[FAILURE], {response}),\n};\n\nexport const MOST_POPULAR = createRequestTypes('MOST_POPULAR');\nexport const mostPopular = {\n  request: (amount, loadDescription, nextPageToken) => createAction(MOST_POPULAR[REQUEST], {amount, loadDescription, nextPageToken}),\n  success: (response) => createAction(MOST_POPULAR[SUCCESS], {response}),\n  failure: (response) => createAction(MOST_POPULAR[FAILURE], {response}),\n};\n\nexport const MOST_POPULAR_BY_CATEGORY = createRequestTypes('MOST_POPULAR_BY_CATEGORY');\nexport const mostPopularByCategory = {\n  request: (categories) => createAction(MOST_POPULAR_BY_CATEGORY[REQUEST], {categories}),\n  success: (response, categories) => createAction(MOST_POPULAR_BY_CATEGORY[SUCCESS], {response, categories}),\n  failure: (response) => createAction(MOST_POPULAR_BY_CATEGORY[FAILURE], response),\n};\n","import React from 'react';\nimport {Icon, Menu} from \"semantic-ui-react\";\nimport './SideBarItem.scss';\nimport {Link, withRouter} from 'react-router-dom';\n\nexport class SideBarItem extends React.Component {\n  render() {\n    // React will ignore custom boolean attributes, therefore we pass a string\n    // we use this attribute in our SCSS for styling\n    const highlight = this.shouldBeHighlighted() ? 'highlight-item' : null;\n    return (\n      <Link to={{pathname: this.props.path}}>\n        <Menu.Item className={['sidebar-item', highlight].join(' ')}>\n          <div className='sidebar-item-alignment-container'>\n            <span><Icon size='large' name={this.props.icon}/> </span>\n            <span>{this.props.label}</span>\n          </div>\n        </Menu.Item>\n      </Link>\n    );\n  }\n\n  shouldBeHighlighted() {\n    const {pathname} = this.props.location;\n    if (this.props.path === '/') {\n      return pathname === this.props.path;\n    }\n    return pathname.includes(this.props.path);\n  }\n}\n\nexport default withRouter(SideBarItem);","import React from 'react';\nimport {Image, Menu} from 'semantic-ui-react';\nimport './SideBarHeader.scss';\nimport {Link, withRouter} from 'react-router-dom';\n\nexport function SideBarHeader(props) {\n  const heading = props.title ? props.title.toUpperCase() : 'Welcome!';\n  return (\n    <Menu.Item>\n      <br />\n \t  <Link to='/'><Image src={require('../../../assets/images/Icon5.png')} size='small' /></Link>\n \t  <br />\n      <Menu.Header className='side-bar-header'><br />{heading}</Menu.Header>\n    </Menu.Item>\n  );\n}\n\nexport default withRouter(SideBarHeader);","import React from 'react';\nimport './SideBarFooter.scss'\n\nexport function SideBarFooter() {\n  return (\n    <React.Fragment>\n      <div className='footer-block'>\n        <div><br />Adapted from <br /> © Productioncoder.com <br /><br />&mdash; A Youtube clone for <br />educational purposes <br />under fair use.</div>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport SideBarItem from './SideBarItem/SideBarItem';\nimport {Menu, Divider} from 'semantic-ui-react';\nimport './SideBar.scss';\nimport {SideBarHeader} from './SideBarHeader/SideBarHeader';\nimport {SideBarFooter} from './SideBarFooter/SideBarFooter';\n\nexport class SideBar extends React.Component {\n  render() {\n    return (\n      <Menu borderless vertical stackable fixed='left' className='side-nav'>\n        <SideBarHeader/>\n        <Divider/>\n        <SideBarItem path='/' label='Home' icon='home'/>\n        <SideBarItem path='/feed/trending' label='Trending' icon='fire'/>\n        <Divider/>\n        <SideBarFooter/>\n      </Menu>\n    );\n  }\n}","import React from 'react';\nimport './VideoGridHeader.scss';\n\nexport function VideoGridHeader(props) {\n  return (\n    <div className='video-grid-header'>\n      <span className='title'>{props.title}</span>\n    </div>\n  );\n}","const UNITS = ['K', 'M', 'B', 'T'];\n\n// https://stackoverflow.com/a/28608086/2328833\nexport function getShortNumberString(number) {\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\n    const lowerBound = Math.pow(1000, index + 1);\n    const upperBound = lowerBound + lowerBound * 10;\n    return  number > lowerBound && number < upperBound\n  });\n  const digits = shouldShowDecimalPlace ? 1 : 0;\n  for (let i = UNITS.length - 1; i >= 0; i--) {\n    const decimal = Math.pow(1000, i + 1);\n\n    if (number >= decimal) {\n      return (number / decimal).toFixed(digits) + UNITS[i];\n    }\n  }\n  return number.toString();\n}","const objMap = ['years', 'months','days', 'hours', 'minutes', 'seconds'];\nconst numbers = '\\\\d+(?:[\\\\.,]\\\\d{0,3})?';\nconst datePattern = `(${numbers}Y)?(${numbers}M)?(${numbers}D)?`;\nconst timePattern = `T(${numbers}H)?(${numbers}M)?(${numbers}S)?`;\nconst pattern = new RegExp(`P(?:${datePattern}(?:${timePattern})?)`);\n\nexport function parseISO8601TimePattern(durationString) {\n  // https://github.com/tolu/ISO8601-duration/blob/master/src/index.js\n  return durationString.match(pattern).slice(1).reduce((prev, next, idx) => {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev\n  }, {});\n}\n\nexport function getPublishedAtDateString(iso8601DateString) {\n  if (!iso8601DateString) {\n    return '';\n  }\n  const date = new Date(Date.parse(iso8601DateString));\n  return date.toDateString();\n}\n\nexport function getVideoDurationString(iso8601DurationString) {\n  if (!iso8601DurationString || iso8601DurationString === '') {\n    return '';\n  }\n\n  // new Date(Date.parse(...)) doesn't work here\n  // therefore we are using our regex approach\n  let {days, hours, minutes, seconds} = parseISO8601TimePattern(iso8601DurationString);\n\n  let secondsString = seconds.toString();\n  let minutesString = minutes.toString();\n  let accumulatedHours = days * 24 + hours;\n\n  if (seconds < 10) {\n    secondsString = seconds.toString().padStart(2, '0');\n  }\n  if (minutes < 10 && hours !== 0) {\n    minutesString = minutesString.toString().padStart(2, '0');\n  }\n  if (!accumulatedHours) {\n    return [minutesString, secondsString].join(':');\n  } else {\n    return [accumulatedHours, minutesString, secondsString].join(':');\n  }\n}","import React from 'react';\nimport {Image} from 'semantic-ui-react';\nimport './VideoPreview.scss';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport {getShortNumberString} from '../../services/number/number-format';\nimport {getVideoDurationString} from '../../services/date/date-format';\nimport {Link} from 'react-router-dom';\n\nTimeAgo.locale(en);\nconst timeAgo = new TimeAgo('en-US');\n\nexport class VideoPreview extends React.Component {\n  render() {\n    const {video} = this.props;\n    if (!video) {\n      return <div/>;\n    }\n\n    const duration = video.contentDetails ? video.contentDetails.duration : null;\n    const videoDuration = getVideoDurationString(duration);\n    const viewAndTimeString = VideoPreview.getFormattedViewAndTime(video);\n    const horizontal = this.props.horizontal ? 'horizontal' : null;\n    const expanded = this.props.expanded ? 'expanded' : null;\n    const description = this.props.expanded ? video.snippet.description : null;\n\n    return (\n      <Link to={{pathname: this.props.pathname, search: this.props.search}}>\n        <div className={['video-preview', horizontal, expanded].join(' ')}>\n          <div className='image-container'>\n            <Image src={video.snippet.thumbnails.medium.url}/>\n            <div className='time-label'>\n              <span>{videoDuration}</span>\n            </div>\n          </div>\n\n          <div className='video-info'>\n            <div className={['semi-bold', 'show-max-two-lines', expanded].join(' ')}>{video.snippet.title}</div>\n            <div className='video-preview-metadata-container'>\n              <div className='channel-title'>{video.snippet.channelTitle}</div>\n              <div className='view-and-time'>{viewAndTimeString}</div>\n              <div className='show-max-two-lines'>{description}</div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n\n  static getFormattedViewAndTime(video) {\n    const publicationDate = new Date(video.snippet.publishedAt);\n    const viewCount = video.statistics ? video.statistics.viewCount : null;\n    if(viewCount) {\n      const viewCountShort = getShortNumberString(video.statistics.viewCount);\n      return `${viewCountShort} views • ${timeAgo.format(publicationDate)}`;\n    }\n    return '';\n  }\n}","import React from 'react';\nimport './VideoGrid.scss';\nimport {VideoGridHeader} from \"./VideoGridHeader/VideoGridHeader\";\nimport {Divider} from \"semantic-ui-react\";\nimport {VideoPreview} from '../VideoPreview/VideoPreview';\n\nexport function VideoGrid(props) {\n  if (!props.videos || !props.videos.length) {\n    return <div/>;\n  }\n  const gridItems = props.videos.map(video => {\n    return (<VideoPreview video={video}\n                          key={video.id}\n                          pathname='/watch'\n                          search={`?v=${video.id}`}/>\n    );\n  });\n\n  const divider = props.hideDivider ? null : <Divider/>;\n  return (\n    <React.Fragment>\n      <VideoGridHeader title={props.title}/>\n      <div className='video-grid'>\n        {gridItems}\n      </div>\n      {divider}\n    </React.Fragment>\n  );\n}","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const WATCH_DETAILS = createRequestTypes('WATCH_DETAILS');\nexport const details = {\n  request: (videoId, channelId) => createAction(WATCH_DETAILS[REQUEST], {videoId, channelId}),\n  success: (response, videoId) => createAction(WATCH_DETAILS[SUCCESS], {response, videoId}),\n  failure: (response) => createAction(WATCH_DETAILS[FAILURE], {response}),\n};\n\nexport const VIDEO_DETAILS = createRequestTypes('VIDEO_DETAILS');\nexport const videoDetails = {\n  request: () => {\n    throw Error('not implemented');\n  },\n  success: (response) => createAction(VIDEO_DETAILS[SUCCESS], {response}),\n  failure: (response) => createAction(VIDEO_DETAILS[FAILURE], {response}),\n};","export const getSearchParam = (location, name) => {\n  if (!location || !location.search) {\n    return null;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  return searchParams.get(name);\n};","import {MOST_POPULAR, MOST_POPULAR_BY_CATEGORY, VIDEO_CATEGORIES} from '../actions/video';\nimport {SUCCESS} from '../actions';\nimport {createSelector} from 'reselect';\nimport {SEARCH_LIST_RESPONSE, VIDEO_LIST_RESPONSE} from '../api/youtube-api-response-types';\nimport {VIDEO_DETAILS, WATCH_DETAILS} from '../actions/watch';\nimport {getSearchParam} from '../../services/url';\n\nexport const initialState = {\n  byId: {},\n  mostPopular: {},\n  categories: {},\n  byCategory: {},\n  related: {},\n};\nexport default function videos(state = initialState, action) {\n  switch (action.type) {\n    case MOST_POPULAR[SUCCESS]:\n      return reduceFetchMostPopularVideos(action.response, state);\n    case VIDEO_CATEGORIES[SUCCESS]:\n      return reduceFetchVideoCategories(action.response, state);\n    case MOST_POPULAR_BY_CATEGORY[SUCCESS]:\n      return reduceFetchMostPopularVideosByCategory(action.response, action.categories, state);\n    case WATCH_DETAILS[SUCCESS]:\n      return reduceWatchDetails(action.response, state);\n    case VIDEO_DETAILS[SUCCESS]:\n      return reduceVideoDetails(action.response, state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceFetchMostPopularVideos(response, prevState) {\n  const videoMap = response.items.reduce((accumulator, video) => {\n    accumulator[video.id] = video;\n    return accumulator;\n  }, {});\n\n  let items = Object.keys(videoMap);\n  if (response.hasOwnProperty('prevPageToken') && prevState.mostPopular) {\n    items = [...prevState.mostPopular.items, ...items];\n  }\n\n  const mostPopular = {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    items,\n  };\n\n  return {\n    ...prevState,\n    mostPopular,\n    byId: {...prevState.byId, ...videoMap},\n  };\n}\n\nfunction reduceFetchVideoCategories(response, prevState) {\n  const categoryMapping = response.items.reduce((accumulator, category) => {\n    accumulator[category.id] = category.snippet.title;\n    return accumulator;\n  }, {});\n  return {\n    ...prevState,\n    categories: categoryMapping,\n  };\n}\n\nfunction reduceFetchMostPopularVideosByCategory(responses, categories, prevState) {\n  let videoMap = {};\n  let byCategoryMap = {};\n\n  responses.forEach((response, index) => {\n    // ignore answer if there was an error\n    if (response.status === 400) return;\n\n    const categoryId = categories[index];\n    const {byId, byCategory} = groupVideosByIdAndCategory(response.result);\n    videoMap = {...videoMap, ...byId};\n    byCategoryMap[categoryId] = byCategory;\n  });\n\n  // compute new state\n  return {\n    ...prevState,\n    byId: {...prevState.byId, ...videoMap},\n    byCategory: {...prevState.byCategory, ...byCategoryMap},\n  };\n}\n\nfunction groupVideosByIdAndCategory(response) {\n  const videos = response.items;\n  const byId = {};\n  const byCategory = {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    items: [],\n  };\n\n  videos.forEach((video) => {\n    byId[video.id] = video;\n\n    const items = byCategory.items;\n    if(items && items) {\n      items.push(video.id);\n    } else {\n      byCategory.items = [video.id];\n    }\n  });\n\n  return {byId, byCategory};\n}\n\nfunction reduceWatchDetails(responses, prevState) {\n  const videoDetailResponse = responses.find(r => r.result.kind === VIDEO_LIST_RESPONSE);\n  // we know that items will only have one element\n  // because we explicitly asked for a video with a specific id\n  const video = videoDetailResponse.result.items[0];\n  const relatedEntry = reduceRelatedVideosRequest(responses);\n\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      [video.id]: video\n    },\n    related: {\n      ...prevState.related,\n      [video.id]: relatedEntry\n    }\n  };\n}\n\nfunction reduceRelatedVideosRequest(responses) {\n  const relatedVideosResponse = responses.find(r => r.result.kind === SEARCH_LIST_RESPONSE);\n  const {pageInfo, items, nextPageToken} = relatedVideosResponse.result;\n  const relatedVideoIds = items.map(video => video.id.videoId);\n\n  return {\n    totalResults: pageInfo.totalResults,\n    nextPageToken,\n    items: relatedVideoIds\n  };\n}\n\nfunction reduceVideoDetails(responses, prevState) {\n  const videoResponses = responses.filter(response => response.result.kind === VIDEO_LIST_RESPONSE);\n  const parsedVideos = videoResponses.reduce((videoMap, response) => {\n    // we're explicitly asking for a video with a particular id\n    // so the response set must either contain 0 items (if a video with the id does not exist)\n    // or at most one item (i.e. the channel we've been asking for)\n    const video = response.result.items ? response.result.items[0] : null;\n    if (!video) {\n      return videoMap;\n    }\n    videoMap[video.id] = video;\n    return videoMap;\n  }, {});\n\n  return {\n    ...prevState,\n    byId: {...prevState.byId, ...parsedVideos},\n  };\n}\n\n/* function reduceVideoDetails(responses) {\n  const videoResponses = responses.filter(response => response.result.kind === VIDEO_LIST_RESPONSE);\n  return videoResponses.reduce((accumulator, response) => {\n    response.result.items.forEach(video => {\n      accumulator[video.id] = video;\n    });\n    return accumulator;\n  }, {});\n}\n\nfunction reduceRelatedVideos(responses, videoIds) {\n  const videoResponses = responses.filter(response => response.result.kind === SEARCH_LIST_RESPONSE);\n  return videoResponses.reduce((accumulator, response, index) => {\n    const relatedIds = response.result.items.map(video => video.id.videoId);\n    accumulator[videoIds[index]] = {\n      totalResults: response.result.pageInfo.totalResults,\n      nextPageToken: response.result.nextPageToken,\n      items: relatedIds\n    };\n    return accumulator;\n  }, {});\n} */\n\n\n/*\n*   Selectors\n* */\nconst getMostPopular = (state) => state.videos.mostPopular;\nexport const getMostPopularVideos = createSelector(\n  (state) => state.videos.byId,\n  getMostPopular,\n  (videosById, mostPopular) => {\n    if (!mostPopular || !mostPopular.items) {\n      return [];\n    }\n    return mostPopular.items.map(videoId => videosById[videoId]);\n  }\n);\nexport const getVideoCategoryIds = createSelector(\n  state => state.videos.categories,\n  (categories) => {\n    return Object.keys(categories || {});\n  }\n);\n\nexport const getVideosByCategory = createSelector(\n  state => state.videos.byCategory,\n  state => state.videos.byId,\n  state => state.videos.categories,\n  (videosByCategory, videosById, categories) => {\n    return Object.keys(videosByCategory || {}).reduce((accumulator, categoryId) => {\n      const videoIds = videosByCategory[categoryId].items;\n      const categoryTitle = categories[categoryId];\n      accumulator[categoryTitle] = videoIds.map(videoId => videosById[videoId]);\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const videoCategoriesLoaded = createSelector(\n  state => state.videos.categories,\n  (categories) => {\n    return Object.keys(categories || {}).length !== 0;\n  }\n);\n\nexport const videosByCategoryLoaded = createSelector(\n  state => state.videos.byCategory,\n  (videosByCategory) => {\n    return Object.keys(videosByCategory || {}).length;\n  }\n);\n\nexport const getVideoById = (state, videoId) => {\n  return state.videos.byId[videoId];\n};\nconst getRelatedVideoIds = (state, videoId) => {\n  const related = state.videos.related[videoId];\n  return related ? related.items : [];\n};\nexport const getRelatedVideos = createSelector(\n  getRelatedVideoIds,\n  state => state.videos.byId,\n  (relatedVideoIds, videos) => {\n    if (relatedVideoIds) {\n      // filter kicks out null values we might have\n      return relatedVideoIds.map(videoId => videos[videoId]).filter(video => video);\n    }\n    return [];\n  });\n\nexport const getChannelId = (state, location, name) => {\n  const videoId = getSearchParam(location, name);\n  const video = state.videos.byId[videoId];\n  if (video) {\n    return video.snippet.channelId;\n  }\n  return null;\n};\n\nexport const getAmountComments = createSelector(\n  getVideoById,\n  (video) => {\n    if (video) {\n      return video.statistics.commentCount;\n    }\n    return 0;\n  });\n\nexport const allMostPopularVideosLoaded = createSelector(\n  [getMostPopular],\n  (mostPopular) => {\n    const amountFetchedItems = mostPopular.items ? mostPopular.items.length : 0;\n    return amountFetchedItems === mostPopular.totalResults;\n  }\n);\n\nexport const getMostPopularVideosNextPageToken = createSelector(\n  [getMostPopular],\n  (mostPopular) => {\n    return mostPopular.nextPageToken;\n  }\n);\n\n","export const VIDEO_LIST_RESPONSE = 'youtube#videoListResponse';\nexport const CHANNEL_LIST_RESPONSE = 'youtube#channelListResponse';\nexport const SEARCH_LIST_RESPONSE = 'youtube#searchListResponse';\nexport const COMMENT_THREAD_LIST_RESPONSE = 'youtube#commentThreadListResponse';","import React from 'react';\nimport {Waypoint} from 'react-waypoint';\nimport {Loader} from 'semantic-ui-react';\nimport './InfiniteScroll.scss';\n\nexport function InfiniteScroll(props) {\n  return (\n    <React.Fragment>\n      {props.children}\n      <Waypoint onEnter={props.bottomReachedCallback}>\n        <div className='loader-container'>\n          <Loader active={props.showLoader} inline='centered' />\n        </div>\n      </Waypoint>\n    </React.Fragment>\n  );\n}","import {VideoGrid} from '../../../components/VideoGrid/VideoGrid';\nimport React from 'react';\nimport './HomeContent.scss';\nimport {getMostPopularVideos, getVideosByCategory} from '../../../store/reducers/videos';\nimport {connect} from 'react-redux';\nimport {InfiniteScroll} from '../../../components/InfiniteScroll/InfiniteScroll';\n\nconst AMOUNT_TRENDING_VIDEOS = 12;\n\nexport class HomeContent extends React.Component {\n  render() {\n    const trendingVideos = this.getTrendingVideos();\n    const categoryGrids = this.getVideoGridsForCategories();\n\n    return (\n      <div className='home-content'>\n        <div className=\"responsive-video-grid-container\">\n          <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.props.showLoader}>\n            <VideoGrid title='Trending' videos={trendingVideos}/>\n            {categoryGrids}\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n\n  getTrendingVideos() {\n    return this.props.mostPopularVideos.slice(0, AMOUNT_TRENDING_VIDEOS);\n  }\n\n  getVideoGridsForCategories() {\n    const categoryTitles = Object.keys(this.props.videosByCategory || {});\n    return categoryTitles.map((categoryTitle,index) => {\n      const videos = this.props.videosByCategory[categoryTitle];\n      // the last video grid element should not have a divider\n      const hideDivider = index === categoryTitles.length - 1;\n      return <VideoGrid title={categoryTitle} videos={videos} key={categoryTitle} hideDivider={hideDivider}/>;\n    });\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videosByCategory: getVideosByCategory(state),\n    mostPopularVideos: getMostPopularVideos(state),\n  };\n}\nexport default connect(mapStateToProps, null)(HomeContent);","import {createAction} from './index';\n\nexport const YOUTUBE_LIBRARY_LOADED = 'YOUTUBE_LIBRARY_LOADED';\nexport const youtubeLibraryLoaded = createAction.bind(null, YOUTUBE_LIBRARY_LOADED);","import {YOUTUBE_LIBRARY_LOADED} from '../actions/api';\n\nconst initialState = {\n  libraryLoaded: false,\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case YOUTUBE_LIBRARY_LOADED:\n      return {\n        libraryLoaded: true,\n      };\n    default:\n      return state;\n  }\n}\nexport const getYoutubeLibraryLoaded = (state) => state.api.libraryLoaded;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport * as videoActions from \"../../store/actions/video\";\nimport './Home.scss';\nimport {SideBar} from '../SideBar/SideBar';\nimport HomeContent from './HomeContent/HomeContent';\nimport {bindActionCreators} from 'redux';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport {getVideoCategoryIds, videoCategoriesLoaded, videosByCategoryLoaded} from '../../store/reducers/videos';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryIndex: 0,\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SideBar/>\n        <HomeContent\n          bottomReachedCallback={this.bottomReachedCallback}\n          showLoader={this.shouldShowLoader()}/>\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.youtubeLibraryLoaded) {\n      this.fetchCategoriesAndMostPopularVideos();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\n      this.fetchCategoriesAndMostPopularVideos();\n    } else if (this.props.videoCategories !== prevProps.videoCategories) {\n      this.fetchVideosByCategory();\n    }\n  }\n\n  fetchVideosByCategory() {\n    const categoryStartIndex = this.state.categoryIndex;\n    const categories = this.props.videoCategories.slice(categoryStartIndex, categoryStartIndex + 3);\n    this.props.fetchMostPopularVideosByCategory(categories);\n    this.setState(prevState => {\n      return {\n        categoryIndex: prevState.categoryIndex + 3,\n      };\n    });\n  }\n\n  fetchCategoriesAndMostPopularVideos() {\n    this.props.fetchMostPopularVideos();\n    this.props.fetchVideoCategories();\n  }\n\n  bottomReachedCallback = () => {\n    if (!this.props.videoCategoriesLoaded) {\n      return;\n    }\n    this.fetchVideosByCategory();\n  };\n\n  shouldShowLoader() {\n    if (this.props.videoCategoriesLoaded && this.props.videosByCategoryLoaded) {\n      return this.state.categoryIndex < this.props.videoCategories.length;\n    }\n    return false;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    videoCategories: getVideoCategoryIds(state),\n    videoCategoriesLoaded: videoCategoriesLoaded(state),\n    videosByCategoryLoaded: videosByCategoryLoaded(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\n  const fetchVideoCategories = videoActions.categories.request;\n  const fetchMostPopularVideosByCategory = videoActions.mostPopularByCategory.request;\n  return bindActionCreators({fetchMostPopularVideos, fetchVideoCategories, fetchMostPopularVideosByCategory}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Form, Image, Input, Menu} from 'semantic-ui-react';\nimport './HeaderNav.scss';\nimport logo from '../../assets/images/logo.png';\nimport {Link, withRouter} from 'react-router-dom';\n\nexport class HeaderNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n    };\n  }\n  render() {\n    return (\n      // 1\n      <Menu borderless className='top-menu' fixed='top'>\n        {/* 2 */}\n        <Menu.Item header className='logo'>\n          <Link to='/'><Image src={logo} size='small' alt='Video Search' /></Link>\n        </Menu.Item>\n        {/* 3 */}\n        <Menu.Menu className='nav-container'>\n          <Menu.Item className='search-input'>\n            <Form onSubmit={this.onSubmit}>\n              {/* 4 */}\n              <Form.Field>\n                <Input placeholder='Search'\n                       size='small'\n                       action='Go'\n                       value={this.state.query}\n                       onChange={this.onInputChange}\n                />\n              </Form.Field>\n            </Form>\n          </Menu.Item>\n          \n        </Menu.Menu>\n      </Menu>\n    );\n  }\n  onInputChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  onSubmit = () => {\n    const escapedSearchQuery = encodeURI(this.state.query);\n    this.props.history.push(`/results?search_query=${escapedSearchQuery}`);\n  };\n}\n\nexport default withRouter(HeaderNav);\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\nexport class ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location && window) {\n      window.scrollTo(0, 0);\n    }\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport './AppLayout.scss';\nimport HeaderNav from '../../containers/HeaderNav/HeaderNav';\nimport ScrollToTop from '../ScrollToTop/ScrollToTop';\n\nexport function AppLayout(props) {\n  return (\n    <ScrollToTop>\n      <div className='app-layout'>\n        <HeaderNav/>\n        {props.children}\n      </div>\n    </ScrollToTop>\n  );\n}","import React from 'react';\nimport './Video.scss';\n\nconst BASE_EMBED_URL = 'https://www.youtube.com/embed/';\n\nexport function Video(props) {\n  if(!props.id) {\n    return null;\n  }\n  const embedUrl = `${BASE_EMBED_URL}${props.id}`;\n  return (\n    <div className='video-container'>\n      <div className=\"video\">\n        <iframe className='video-player' src={embedUrl} frameBorder='0'\n                allow='autoplay; encrypted-media' allowFullScreen title='video' />\n      </div>\n\n    </div>\n  );\n}","import React from 'react';\nimport './Rating.scss';\nimport {Icon, Progress} from \"semantic-ui-react\";\nimport {getShortNumberString} from '../../services/number/number-format';\n\nexport function Rating(props) {\n  let rating = null;\n  let likeCount = props.likeCount !== 0 ? props.likeCount : null;\n  let dislikeCount = null;\n\n  if(props.likeCount && props.dislikeCount) {\n    const amountLikes = parseFloat(props.likeCount);\n    const amountDislikes = parseFloat(props.dislikeCount);\n    const percentagePositiveRatings = 100.0 * (amountLikes / (amountLikes + amountDislikes));\n\n    // Now that we have calculated the percentage, we bring the numbers into a better readable format\n    likeCount = getShortNumberString(amountLikes);\n    dislikeCount = getShortNumberString(amountDislikes);\n    rating = <Progress percent={percentagePositiveRatings} size='tiny'/>;\n  }\n  return (\n    <div className='rating'>\n      <div >\n        <Icon name='thumbs outline up'/>\n        <span>{likeCount}</span>\n      </div>\n      <div >\n        <Icon name='thumbs outline down'/>\n        <span>{dislikeCount}</span>\n      </div>\n      {rating}\n    </div>\n  );\n}","import React from 'react';\nimport {Divider} from \"semantic-ui-react\";\nimport './VideoMetadata.scss';\nimport {Rating} from '../Rating/Rating';\n\nexport function VideoMetadata(props) {\n  if (!props.video || !props.video.statistics) {\n    return <div/>;\n  }\n  const viewCount = Number(props.video.statistics.viewCount).toLocaleString();\n\n  return (\n    <div className='video-metadata'>\n      <h3>{props.video.snippet.title}</h3>\n      <div className='video-stats'>\n        <span>{viewCount} views</span>\n        <div className='video-actions' >\n          <Rating likeCount={props.video.statistics.likeCount}\n                  dislikeCount={props.video.statistics.dislikeCount}/>\n        </div>\n      </div>\n      <Divider/>\n    </div>\n  );\n}","import React from 'react';\nimport './VideoInfoBox.scss';\nimport {Image, Button, Divider} from 'semantic-ui-react';\nimport Linkify from 'react-linkify';\nimport {getPublishedAtDateString} from '../../services/date/date-format';\nimport {getShortNumberString} from '../../services/number/number-format';\n\nexport class VideoInfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  render() {\n    if (!this.props.video || !this.props.channel) {\n      return <div/>;\n    }\n\n    const descriptionParagraphs = this.getDescriptionParagraphs();\n    const {descriptionTextClass, buttonTitle} = this.getConfig();\n    const publishedAtString = getPublishedAtDateString(this.props.video.snippet.publishedAt);\n\n    const {channel} = this.props;\n    const buttonText = this.getSubscriberButtonText();\n    const channelThumbnail = channel.snippet.thumbnails.medium.url;\n    const channelTitle = channel.snippet.title;\n\n    return (\n      <div>\n        <div className='video-info-box'>\n          <Image className='channel-image' src={channelThumbnail} circular/>\n          <div className=\"video-info\">\n            <div className='channel-name'>{channelTitle}</div>\n            <div className='video-publication-date'>{publishedAtString}</div>\n          </div>\n          <Button className='subscribe' color='youtube'>{buttonText}</Button>\n          <div className=\"video-description\">\n            <div className={descriptionTextClass}>\n              {descriptionParagraphs}\n            </div>\n            <Button compact onClick={this.onToggleCollapseButtonClick}>{buttonTitle}</Button>\n          </div>\n        </div>\n        <Divider/>\n      </div>\n    );\n  }\n\n  onToggleCollapseButtonClick = () => {\n    this.setState((prevState) => {\n      return {\n        collapsed: !prevState.collapsed\n      };\n    });\n  };\n\n  getDescriptionParagraphs() {\n    const videoDescription = this.props.video.snippet ? this.props.video.snippet.description : null;\n    if (!videoDescription) {\n      return null;\n    }\n    return videoDescription.split('\\n').map((paragraph, index) => <p key={index}><Linkify>{paragraph}</Linkify></p>);\n  }\n\n  getSubscriberButtonText() {\n    const {channel} = this.props;\n    const parsedSubscriberCount = Number(channel.statistics.subscriberCount);\n    const subscriberCount = getShortNumberString(parsedSubscriberCount);\n    return `${subscriberCount} Subscribers`;\n  }\n\n  getConfig() {\n    let descriptionTextClass = 'collapsed';\n    let buttonTitle = 'Show More';\n    if (!this.state.collapsed) {\n      descriptionTextClass = 'expanded';\n      buttonTitle = 'Show Less';\n    }\n    return {\n      descriptionTextClass,\n      buttonTitle\n    };\n  }\n}","import React from 'react';\nimport {Button} from \"semantic-ui-react\";\nimport './CommentsHeader.scss';\n\nexport function CommentsHeader(props) {\n  return (\n    <div className='comments-header'>\n      <Button basic compact icon>\n        {props.amountComments} Comments\n      </Button>\n    </div>\n  );\n}","import React from 'react';\nimport './Comment.scss';\nimport {Image} from \"semantic-ui-react\";\nimport {Rating} from '../../../components/Rating/Rating';\n\nexport function Comment(props) {\n  if (!props.comment) {\n    return <div/>;\n  }\n  const topLevelComment = props.comment.snippet.topLevelComment;\n  const {authorProfileImageUrl, authorDisplayName, textOriginal} = topLevelComment.snippet;\n  const likeCount = topLevelComment.snippet.likeCount;\n\n  return (\n    <div className='comment'>\n      <Image className='user-image' src={authorProfileImageUrl} circular />\n      <div>\n        <div className='user-name'>{authorDisplayName}</div>\n        <span>{textOriginal}</span>\n        <div className='comment-actions'>\n          <Rating likeCount={likeCount}/>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport {CommentsHeader} from \"./CommentsHeader/CommentsHeader\";\nimport {Comment} from './Comment/Comment';\n\nexport class Comments extends React.Component {\n  render() {\n    if (!this.props.comments) {\n      return <div/>;\n    }\n\n    const comments = this.props.comments.map((comment) => {\n      return <Comment comment={comment} key={comment.id}/>\n    });\n\n    return(\n      <div>\n        <CommentsHeader amountComments={this.props.amountComments}/>\n        {comments}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './NextUpVideo.scss';\nimport {Divider} from \"semantic-ui-react\";\nimport {VideoPreview} from '../../VideoPreview/VideoPreview';\n\nexport function NextUpVideo(props) {\n  return (\n    <React.Fragment>\n      <div className='next-up-container'>\n        <h4>Related Videos</h4>\n      </div>\n      <VideoPreview horizontal={true} video={props.video} pathname='/watch' search={`?v=${props.video.id}`}/>\n      <Divider/>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport {VideoPreview} from '../VideoPreview/VideoPreview';\nimport './RelatedVideos.scss';\nimport {NextUpVideo} from './NextUpVideo/NextUpVideo';\n\nexport function RelatedVideos(props) {\n  if (!props.videos || !props.videos.length) {\n    return <div className='related-videos'/>;\n  }\n\n  // safe because before we check if the array has at least one element\n  const nextUpVideo = props.videos[0];\n  const remainingVideos = props.videos.slice(1);\n\n  const relatedVideosPreviews = remainingVideos.map(relatedVideo => (\n      <VideoPreview video={relatedVideo}\n                    key={relatedVideo.id}\n                    pathname='/watch'\n                    search={`?v=${relatedVideo.id}`}\n                    horizontal={true}/>\n  ));\n\n  return (\n    <div className='related-videos'>\n      <NextUpVideo video={nextUpVideo}/>\n      {relatedVideosPreviews}\n    </div>\n  );\n}","import {VIDEO_DETAILS, WATCH_DETAILS} from '../actions/watch';\nimport {SUCCESS} from '../actions';\nimport {CHANNEL_LIST_RESPONSE} from '../api/youtube-api-response-types';\n\nconst initialState = {\n  byId: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case WATCH_DETAILS[SUCCESS]:\n      return reduceWatchDetails(action.response, state);\n    case VIDEO_DETAILS[SUCCESS]:\n      return reduceVideoDetails(action.response, state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceWatchDetails(responses, prevState) {\n  const channelResponse = responses.find(response => response.result.kind === CHANNEL_LIST_RESPONSE);\n  let channels = {};\n  if (channelResponse && channelResponse.result.items) {\n    // we know that there will only be one item\n    // because we ask for a channel with a specific id\n    const channel = channelResponse.result.items[0];\n    channels[channel.id] = channel;\n  }\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      ...channels\n    }\n  };\n}\n\nfunction reduceVideoDetails(responses, prevState) {\n  const channelResponse = responses.find(response => response.result.kind === CHANNEL_LIST_RESPONSE);\n  let channelEntry = {};\n  if (channelResponse && channelResponse.result.items) {\n    // we're explicitly asking for a channel with a particular id\n    // so the response set must either contain 0 items (if a channel with the specified id does not exist)\n    // or at most one item (i.e. the channel we've been asking for)\n    const channel = channelResponse.result.items[0];\n    channelEntry =  {\n      [channel.id]: channel,\n    }\n  }\n\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      ...channelEntry,\n    }\n  };\n}\n\n/*\n*   Selectors\n* */\nexport const getChannel = (state, channelId) => {\n  if (!channelId) return null;\n  return state.channels.byId[channelId];\n};","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const COMMENT_THREAD = createRequestTypes('COMMENT_THREAD');\nexport const thread = {\n  request: (videoId, nextPageToken) => createAction(COMMENT_THREAD[REQUEST], {videoId, nextPageToken}),\n  success: (response, videoId) => createAction(COMMENT_THREAD[SUCCESS], {response, videoId}),\n  failure: (response) => createAction(COMMENT_THREAD[FAILURE], {response}),\n};","import {SUCCESS} from '../actions';\nimport {WATCH_DETAILS} from '../actions/watch';\nimport {COMMENT_THREAD_LIST_RESPONSE} from '../api/youtube-api-response-types';\nimport {createSelector} from 'reselect';\nimport {COMMENT_THREAD} from '../actions/comment';\nimport {getSearchParam} from '../../services/url';\n\nconst initialState = {\n  byVideo: {},\n  byId: {},\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case COMMENT_THREAD[SUCCESS]:\n      return reduceCommentThread(action.response, action.videoId, state);\n    case WATCH_DETAILS[SUCCESS]:\n      return reduceWatchDetails(action.response, action.videoId, state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceWatchDetails(responses, videoId, prevState) {\n  const commentThreadResponse = responses.find(res => res.result.kind === COMMENT_THREAD_LIST_RESPONSE);\n  return reduceCommentThread(commentThreadResponse.result, videoId, prevState);\n}\n\nfunction reduceCommentThread(response, videoId, prevState) {\n  if (!response) {\n    return prevState;\n  }\n  const newComments = response.items.reduce((acc, item) => {\n    acc[item.id] = item;\n    return acc;\n  }, {});\n\n  // if we have already fetched some comments for a particular video\n  // we just append the ids for the new comments\n  const prevCommentIds = prevState.byVideo[videoId] ? prevState.byVideo[videoId].ids : [];\n  const commentIds = [...prevCommentIds, ...Object.keys(newComments)];\n\n  const byVideoComment = {\n    nextPageToken: response.nextPageToken,\n    ids: commentIds,\n  };\n\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      ...newComments,\n    },\n    byVideo: {\n      ...prevState.byVideo,\n      [videoId]: byVideoComment,\n    }\n  };\n}\n\n/*\n* Selectors\n */\nconst getCommentIdsForVideo = (state, videoId) => {\n  const comment = state.comments.byVideo[videoId];\n  if (comment) {\n    return comment.ids;\n  }\n  return [];\n};\nexport const getCommentsForVideo = createSelector(\n  getCommentIdsForVideo,\n  state => state.comments.byId,\n  (commentIds, allComments) => {\n    return commentIds.map(commentId => allComments[commentId]);\n  }\n);\n\nconst getComment = (state, location) => {\n  const videoId = getSearchParam(location, 'v');\n  return state.comments.byVideo[videoId];\n};\nexport const getCommentNextPageToken = createSelector(\n  getComment,\n  (comment) => {\n    return comment ? comment.nextPageToken : null;\n  }\n);","import React from 'react';\nimport {Video} from '../../../components/Video/Video';\nimport {VideoMetadata} from '../../../components/VideoMetadata/VideoMetadata';\nimport {VideoInfoBox} from '../../../components/VideoInfoBox/VideoInfoBox';\nimport {Comments} from '../../Comments/Comments';\nimport {RelatedVideos} from '../../../components/RelatedVideos/RelatedVideos';\nimport './WatchContent.scss';\nimport {getAmountComments, getRelatedVideos, getVideoById} from '../../../store/reducers/videos';\nimport {connect} from 'react-redux';\nimport {getChannel} from '../../../store/reducers/channels';\nimport {getCommentsForVideo} from '../../../store/reducers/comments';\nimport {InfiniteScroll} from '../../../components/InfiniteScroll/InfiniteScroll';\n\nclass WatchContent extends React.Component {\n  render() {\n    if (!this.props.videoId) {\n      return <div/>\n    }\n    return (\n      <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.shouldShowLoader()}>\n        <div className='watch-grid'>\n          <Video className='video' id={this.props.videoId}/>\n          <VideoMetadata className='metadata' video={this.props.video}/>\n          <VideoInfoBox className='video-info-box' video={this.props.video} channel={this.props.channel}/>\n          <RelatedVideos className='related-videos' videos={this.props.relatedVideos}/>\n          <Comments className='comments' comments={this.props.comments}  amountComments={this.props.amountComments}/>\n        </div>\n      </InfiniteScroll>\n    );\n  }\n  shouldShowLoader() {\n    return !!this.props.nextPageToken;\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    relatedVideos: getRelatedVideos(state, props.videoId),\n    video: getVideoById(state, props.videoId),\n    channel: getChannel(state, props.channelId),\n    comments: getCommentsForVideo(state, props.videoId),\n    amountComments: getAmountComments(state, props.videoId)\n  }\n}\n\nexport default connect(mapStateToProps, null)(WatchContent);","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport * as watchActions from '../../store/actions/watch';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport WatchContent from './WatchContent/WatchContent';\nimport {getSearchParam} from '../../services/url';\nimport {getChannelId} from '../../store/reducers/videos';\nimport {getCommentNextPageToken} from '../../store/reducers/comments';\nimport * as commentActions from '../../store/actions/comment';\n\n\nexport class Watch extends React.Component {\n  render() {\n    const videoId = this.getVideoId();\n    return (\n      <WatchContent videoId={videoId} channelId={this.props.channelId} bottomReachedCallback={this.fetchMoreComments}\n                    nextPageToken={this.props.nextPageToken}/>\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.youtubeLibraryLoaded) {\n      this.fetchWatchContent();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\n      this.fetchWatchContent();\n    }\n  }\n\n  getVideoId() {\n    return getSearchParam(this.props.location, 'v');\n  }\n\n  fetchWatchContent() {\n    const videoId = this.getVideoId();\n    if (!videoId) {\n      this.props.history.push('/');\n    }\n    this.props.fetchWatchDetails(videoId, this.props.channelId);\n  }\n\n  fetchMoreComments = () => {\n    if (this.props.nextPageToken) {\n      this.props.fetchCommentThread(this.getVideoId(), this.props.nextPageToken);\n    }\n  };\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    channelId: getChannelId(state, props.location, 'v'),\n    nextPageToken: getCommentNextPageToken(state, props.location),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const fetchWatchDetails = watchActions.details.request;\n  const fetchCommentThread = commentActions.thread.request;\n  return bindActionCreators({fetchWatchDetails, fetchCommentThread}, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Watch));","import React from 'react';\nimport {SideBar} from '../../containers/SideBar/SideBar';\nimport {InfiniteScroll} from '../InfiniteScroll/InfiniteScroll';\nimport './VideoList.scss';\nimport {VideoPreview} from '../VideoPreview/VideoPreview';\n\nexport class VideoList extends React.Component {\n  render() {\n    const videoPreviews = this.getVideoPreviews();\n    return (\n      <React.Fragment>\n        <SideBar/>\n        <div className='video-list'>\n          <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.props.showLoader}>\n            {videoPreviews}\n          </InfiniteScroll>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getVideoPreviews() {\n    if(!this.props.videos || !this.props.videos.length) {\n      return null;\n    }\n    const firstVideo = this.props.videos[0];\n    if (!firstVideo.snippet.description) {return null}\n\n    return this.props.videos.map(video => (\n      <VideoPreview horizontal={true} expanded={true} video={video} key={video.id} pathname={'/watch'}\n                    search={'?v=' + video.id}/>)\n    );\n  }\n\n}","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as videoActions from \"../../store/actions/video\";\nimport {\n  allMostPopularVideosLoaded,\n  getMostPopularVideos,\n  getMostPopularVideosNextPageToken\n} from '../../store/reducers/videos';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport {VideoList} from '../../components/VideoList/VideoList';\n\nclass Trending extends React.Component {\n  componentDidMount() {\n    this.fetchTrendingVideos();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.youtubeLibraryLoaded !== this.props.youtubeLibraryLoaded) {\n      this.fetchTrendingVideos();\n    }\n  }\n\n  render() {\n    const loaderActive = this.shouldShowLoader();\n\n    return (<VideoList\n      bottomReachedCallback={this.fetchMoreVideos}\n      showLoader={loaderActive}\n      videos={this.props.videos}/>);\n  }\n\n\n  fetchMoreVideos = () => {\n    const {nextPageToken} = this.props;\n    if (this.props.youtubeLibraryLoaded && nextPageToken) {\n      this.props.fetchMostPopularVideos(12, true, nextPageToken);\n    }\n  };\n\n  fetchTrendingVideos() {\n    if (this.props.youtubeLibraryLoaded) {\n      this.props.fetchMostPopularVideos(20, true);\n    }\n  }\n\n  shouldShowLoader() {\n    return !this.props.allMostPopularVideosLoaded;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videos: getMostPopularVideos(state),\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    allMostPopularVideosLoaded: allMostPopularVideosLoaded(state),\n    nextPageToken: getMostPopularVideosNextPageToken(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\n  return bindActionCreators({fetchMostPopularVideos}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trending);","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\nexport const forVideos = {\n  request: (searchQuery, nextPageToken, amount) => createAction(SEARCH_FOR_VIDEOS[REQUEST], {searchQuery, nextPageToken, amount}),\n  success: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[SUCCESS], {response, searchQuery}),\n  failure: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[FAILURE],  {response, searchQuery}),\n};","import {SEARCH_FOR_VIDEOS} from '../actions/search';\nimport {REQUEST, SUCCESS} from '../actions';\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case SEARCH_FOR_VIDEOS[SUCCESS]:\n      return reduceSearchForVideos(action.response, action.searchQuery, state);\n    case SEARCH_FOR_VIDEOS[REQUEST]:\n      // delete the previous search because otherwise our component flickers and shows the\n      // previous search results before it shows\n      return action.nextPageToken ? state : {};\n    default:\n      return state;\n  }\n}\n\nfunction reduceSearchForVideos(response, searchQuery, prevState) {\n  let searchResults = response.items.map(item => ({...item, id: item.id.videoId}));\n  if (prevState.query === searchQuery) {\n    const prevResults = prevState.results || [];\n    searchResults = prevResults.concat(searchResults);\n  }\n  return {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    query: searchQuery,\n    results: searchResults\n  };\n}\n\n/*\n  Selectors\n */\nexport const getSearchResults = (state) => state.search.results;\nexport const getSearchNextPageToken = (state) => state.search.nextPageToken;\n","import React from 'react';\nimport './Search.scss';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport {getSearchNextPageToken, getSearchResults} from '../../store/reducers/search';\nimport * as searchActions from '../../store/actions/search';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {getSearchParam} from '../../services/url';\nimport {VideoList} from '../../components/VideoList/VideoList';\nimport {withRouter} from 'react-router-dom';\n\nclass Search extends React.Component {\n  render() {\n    return (<VideoList\n      bottomReachedCallback={this.bottomReachedCallback}\n      showLoader={true}\n      videos={this.props.searchResults}/>);\n  }\n\n  getSearchQuery() {\n    return getSearchParam(this.props.location, 'search_query');\n  }\n\n  componentDidMount() {\n    if (!this.getSearchQuery()) {\n      // redirect to home component if search query is not there\n      this.props.history.push('/');\n    }\n    this.searchForVideos();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.youtubeApiLoaded !== this.props.youtubeApiLoaded) {\n      this.searchForVideos();\n    }\n  }\n\n  searchForVideos() {\n    const searchQuery = this.getSearchQuery();\n    if (this.props.youtubeApiLoaded) {\n      this.props.searchForVideos(searchQuery);\n    }\n  }\n\n  bottomReachedCallback = () => {\n    if(this.props.nextPageToken) {\n      this.props.searchForVideos(this.getSearchQuery(), this.props.nextPageToken, 25);\n    }\n  };\n\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const searchForVideos = searchActions.forVideos.request;\n  return bindActionCreators({searchForVideos}, dispatch);\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    youtubeApiLoaded: getYoutubeLibraryLoaded(state),\n    searchResults: getSearchResults(state, props.location.search),\n    nextPageToken: getSearchNextPageToken(state, props.location.search),\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search));\n\n","import React, {Component} from 'react';\nimport Home from './containers/Home/Home';\nimport {AppLayout} from './components/AppLayout/AppLayout';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport Watch from './containers/Watch/Watch';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {youtubeLibraryLoaded} from './store/actions/api';\nimport Trending from './containers/Trending/Trending';\nimport Search from './containers/Search/Search';\n\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppLayout>\n        <Switch>\n          <Route path=\"/webd171-7/feed/trending\" component={Trending}/>\n          <Route path=\"/webd171-7/results\" render={() => <Search key={this.props.location.key}/>}/>\n          <Route path=\"/webd171-7/watch\" render={() => <Watch key={this.props.location.key}/>}/>\n          <Route path=\"/webd171-7\" component={Home}/>\n        </Switch>\n      </AppLayout>\n    );\n  }\n  componentDidMount() {\n    this.loadYoutubeApi();\n  }\n\n  loadYoutubeApi() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/client.js\";\n\n    script.onload = () => {\n      window.gapi.load('client', () => {\n        window.gapi.client.setApiKey(API_KEY);\n        window.gapi.client.load('youtube', 'v3', () => {\n          this.props.youtubeLibraryLoaded();\n        });\n      });\n    };\n\n    document.body.appendChild(script);\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({youtubeLibraryLoaded}, dispatch);\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import apiReducer from './api';\nimport {combineReducers} from 'redux';\nimport videosReducer from './videos'\nimport channelsReducer from './channels';\nimport commentsReducer from './comments';\nimport searchReducer from './search';\n\nexport default combineReducers({\n  api: apiReducer,\n  videos: videosReducer,\n  channels: channelsReducer,\n  comments: commentsReducer,\n  search: searchReducer\n});","export function buildVideoCategoriesRequest() {\n  return buildApiRequest('GET',\n    '/youtube/v3/videoCategories',\n    {\n      'part': 'snippet',\n      'regionCode': 'US'\n    }, null);\n}\n\nexport function buildMostPopularVideosRequest(amount = 12, loadDescription = false, nextPageToken, videoCategoryId = null) {\n  let fields = 'nextPageToken,prevPageToken,items(contentDetails/duration,id,snippet(channelId,channelTitle,publishedAt,thumbnails/medium,title),statistics/viewCount),pageInfo(totalResults)';\n  if (loadDescription) {\n    fields += ',items/snippet/description';\n  }\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      chart: 'mostPopular',\n      maxResults: amount,\n      regionCode: 'US',\n      pageToken: nextPageToken,\n      fields,\n      videoCategoryId,\n    }, null);\n}\n\nexport function buildVideoDetailRequest(videoId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      id: videoId,\n      fields: 'kind,items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,thumbnails/medium,title),statistics)'\n    }, null);\n}\n\nexport function buildChannelRequest(channelId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/channels',\n    {\n      part: 'snippet,statistics',\n      id: channelId,\n      fields: 'kind,items(id,snippet(description,thumbnails/medium,title),statistics/subscriberCount)'\n    }, null);\n}\n\nexport function buildCommentThreadRequest(videoId, nextPageToken) {\n  return buildApiRequest('GET',\n    '/youtube/v3/commentThreads',\n    {\n      part: 'id,snippet',\n      pageToken: nextPageToken,\n      videoId,\n    }, null);\n}\n\nexport function buildSearchRequest(query, nextPageToken, amount = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'id,snippet',\n      q: query,\n      type: 'video',\n      pageToken: nextPageToken,\n      maxResults: amount,\n    }, null);\n}\n\nexport function buildRelatedVideosRequest(videoId, amountRelatedVideos = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'snippet',\n      type: 'video',\n      maxResults: amountRelatedVideos,\n      relatedToVideoId: videoId,\n    }, null);\n}\n\n/*\n  Util - Youtube API boilerplate code\n */\nexport function buildApiRequest(requestMethod, path, params, properties) {\n  params = removeEmptyParams(params);\n  let request;\n  if (properties) {\n    let resource = createResource(properties);\n    request = window.gapi.client.request({\n      'body': resource,\n      'method': requestMethod,\n      'path': path,\n      'params': params\n    });\n  } else {\n    request = window.gapi.client.request({\n      'method': requestMethod,\n      'path': path,\n      'params': params\n    });\n  }\n  return request;\n}\n\nfunction removeEmptyParams(params) {\n  for (var p in params) {\n    if (!params[p] || params[p] === 'undefined') {\n      delete params[p];\n    }\n  }\n  return params;\n}\n\nfunction createResource(properties) {\n  var resource = {};\n  var normalizedProps = properties;\n  for (var p in properties) {\n    var value = properties[p];\n    if (p && p.substr(-2, 2) === '[]') {\n      var adjustedName = p.replace('[]', '');\n      if (value) {\n        normalizedProps[adjustedName] = value.split(',');\n      }\n      delete normalizedProps[p];\n    }\n  }\n  for (var prop in normalizedProps) {\n    // Leave properties that don't have values out of inserted resource.\n    if (normalizedProps.hasOwnProperty(prop) && normalizedProps[prop]) {\n      var propArray = prop.split('.');\n      var ref = resource;\n      for (var pa = 0; pa < propArray.length; pa++) {\n        var key = propArray[pa];\n        if (pa === propArray.length - 1) {\n          ref[key] = normalizedProps[prop];\n        } else {\n          ref = ref[key] = ref[key] || {};\n        }\n      }\n    }\n  }\n  return resource;\n}","import {fork, take, takeEvery, call, all, put} from 'redux-saga/effects';\nimport * as api from '../api/youtube-api';\nimport * as videoActions from '../actions/video';\nimport {REQUEST} from '../actions';\nimport {fetchEntity, ignoreErrors} from './index';\n\nexport const fetchVideoCategories = fetchEntity.bind(null, api.buildVideoCategoriesRequest, videoActions.categories);\n\n\nexport function* fetchMostPopularVideosByCategory(categories) {\n  const requests = categories.map(categoryId => {\n    const wrapper = ignoreErrors(api.buildMostPopularVideosRequest, 12, false, null, categoryId);\n    return call(wrapper);\n  });\n  try {\n    const response = yield all(requests);\n    yield put(videoActions.mostPopularByCategory.success(response, categories));\n  } catch (error) {\n    yield put(videoActions.mostPopularByCategory.failure(error));\n  }\n}\n\nexport function* fetchMostPopularVideos(amount, loadDescription, nextPageToken) {\n  const request = api.buildMostPopularVideosRequest.bind(null, amount, loadDescription, nextPageToken);\n  yield fetchEntity(request, videoActions.mostPopular);\n}\n\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchMostPopularVideos() {\n  while (true) {\n    const {amount, loadDescription, nextPageToken} = yield take(videoActions.MOST_POPULAR[REQUEST]);\n    yield fork(fetchMostPopularVideos, amount, loadDescription, nextPageToken);\n  }\n}\n\nexport function* watchVideoCategories() {\n  yield takeEvery(videoActions.VIDEO_CATEGORIES[REQUEST], fetchVideoCategories);\n}\nexport function* watchMostPopularVideosByCategory() {\n  while(true) {\n    const {categories} = yield take(videoActions.MOST_POPULAR_BY_CATEGORY[REQUEST]);\n    yield fork(fetchMostPopularVideosByCategory, categories);\n  }\n}","import {fork, take, all, put, call} from 'redux-saga/effects';\nimport * as watchActions from '../actions/watch';\nimport {\n  buildVideoDetailRequest,\n  buildRelatedVideosRequest,\n  buildChannelRequest,\n  buildCommentThreadRequest\n} from '../api/youtube-api';\nimport {REQUEST} from '../actions';\nimport {SEARCH_LIST_RESPONSE, VIDEO_LIST_RESPONSE} from '../api/youtube-api-response-types';\n\nexport function* fetchWatchDetails(videoId, channelId) {\n  let requests = [\n    buildVideoDetailRequest.bind(null, videoId),\n    buildRelatedVideosRequest.bind(null, videoId),\n    buildCommentThreadRequest.bind(null, videoId)\n  ];\n\n  if (channelId) {\n    requests.push(buildChannelRequest.bind(null, channelId));\n  }\n\n  try {\n    const responses = yield all(requests.map(fn => call(fn)));\n    yield put(watchActions.details.success(responses, videoId));\n    yield call (fetchVideoDetails, responses, channelId === null);\n  } catch (error) {\n    yield put(watchActions.details.failure(error));\n  }\n}\n\nfunction* fetchVideoDetails(responses, shouldFetchChannelInfo) {\n  const searchListResponse = responses.find(response => response.result.kind === SEARCH_LIST_RESPONSE);\n  const relatedVideoIds =  searchListResponse.result.items.map(relatedVideo => relatedVideo.id.videoId);\n\n  const requests = relatedVideoIds.map(relatedVideoId => {\n    return buildVideoDetailRequest.bind(null, relatedVideoId);\n  });\n\n  if (shouldFetchChannelInfo) {\n    // we have to extract the video's channel id from the video details response\n    // so we can load additional channel information.\n    // this is only needed, when a user directly accesses .../watch?v=1234\n    // because then we only know the video id\n    const videoDetailResponse = responses.find(response => response.result.kind === VIDEO_LIST_RESPONSE);\n    const videos = videoDetailResponse.result.items;\n    if (videos && videos.length) {\n      requests.push(buildChannelRequest.bind(null, videos[0].snippet.channelId));\n    }\n  }\n\n  try {\n    const responses = yield all(requests.map(fn => call(fn)));\n    yield put(watchActions.videoDetails.success(responses));\n  } catch (error) {\n    yield put(watchActions.videoDetails.failure(error));\n  }\n}\n\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchWatchDetails() {\n  while (true) {\n    const {videoId, channelId} = yield take(watchActions.WATCH_DETAILS[REQUEST]);\n    yield fork(fetchWatchDetails, videoId, channelId);\n  }\n}","import {fork, take} from 'redux-saga/effects';\nimport {REQUEST} from '../actions';\nimport * as commentActions from '../actions/comment'\nimport * as api from '../api/youtube-api';\nimport {fetchEntity} from './index';\n\nexport function* fetchCommentThread(videoId, nextPageToken) {\n  const request = api.buildCommentThreadRequest.bind(null, videoId, nextPageToken);\n  yield fetchEntity(request, commentActions.thread, videoId);\n}\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchCommentThread() {\n  while(true) {\n    const {videoId, nextPageToken} = yield take(commentActions.COMMENT_THREAD[REQUEST]);\n    yield fork(fetchCommentThread, videoId, nextPageToken);\n  }\n}","import * as searchActions from '../actions/search';\nimport {REQUEST} from '../actions';\nimport {fork, take} from 'redux-saga/effects';\nimport * as api from '../api/youtube-api';\nimport {fetchEntity} from './index';\n\nexport function* searchForVideos(searchQuery, nextPageToken, amount) {\n  const request = api.buildSearchRequest.bind(null, searchQuery, nextPageToken, amount);\n  yield fetchEntity(request, searchActions.forVideos, searchQuery);\n}\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchSearchForVideos() {\n  while (true) {\n    const {searchQuery, amount, nextPageToken} = yield take(searchActions.SEARCH_FOR_VIDEOS[REQUEST]);\n    yield fork(searchForVideos, searchQuery, nextPageToken, amount);\n  }\n}","import {all, call, put, fork} from 'redux-saga/effects';\nimport {watchMostPopularVideos, watchMostPopularVideosByCategory, watchVideoCategories} from './video';\nimport {watchWatchDetails} from './watch';\nimport {watchCommentThread} from './comment';\nimport {watchSearchForVideos} from './search';\nexport default function* () {\n  yield all([\n    fork(watchMostPopularVideos),\n    fork(watchVideoCategories),\n    fork(watchMostPopularVideosByCategory),\n    fork(watchWatchDetails),\n    fork(watchCommentThread),\n    fork(watchSearchForVideos)\n  ]);\n}\n\n/*\n* entity must have a success, request and failure method\n* request is a function that returns a promise when called\n* */\nexport function* fetchEntity(request, entity, ...args) {\n  try {\n    const response = yield call(request);\n    // we directly return the result object and throw away the headers and the status text here\n    // if status and headers are needed, then instead of returning response.result, we have to return just response.\n    yield put(entity.success(response.result, ...args));\n  } catch (error) {\n    yield put(entity.failure(error, ...args));\n  }\n}\n\nexport function ignoreErrors(fn, ...args) {\n  return () => {\n    const ignoreErrorCallback = (response) => response;\n    return fn(...args).then(ignoreErrorCallback, ignoreErrorCallback);\n  };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/fomantic-ui-css/semantic.css';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {configureStore} from './store/configureStore';\nrequire('dotenv').config();\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>, document.getElementById('root')\n  );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","import {applyMiddleware, compose, createStore} from 'redux';\nimport reducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nexport function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n  ));\n  sagaMiddleware.run(rootSaga);\n  return store;\n}"],"sourceRoot":""}