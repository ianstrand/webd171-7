{"ast":null,"code":"var UNITS=['K','M','B','T'];// https://stackoverflow.com/a/28608086/2328833\nexport function getShortNumberString(number){var shouldShowDecimalPlace=UNITS.some(function(element,index){var lowerBound=Math.pow(1000,index+1);var upperBound=lowerBound+lowerBound*10;return number>lowerBound&&number<upperBound;});var digits=shouldShowDecimalPlace?1:0;for(var i=UNITS.length-1;i>=0;i--){var decimal=Math.pow(1000,i+1);if(number>=decimal){return(number/decimal).toFixed(digits)+UNITS[i];}}return number.toString();}","map":{"version":3,"sources":["/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/7/webd171-7/src/services/number/number-format.js"],"names":["UNITS","getShortNumberString","number","shouldShowDecimalPlace","some","element","index","lowerBound","Math","pow","upperBound","digits","i","length","decimal","toFixed","toString"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,CAAd,CAEA;AACA,MAAO,SAASC,CAAAA,oBAAT,CAA8BC,MAA9B,CAAsC,CAC3C,GAAMC,CAAAA,sBAAsB,CAAGH,KAAK,CAACI,IAAN,CAAW,SAACC,OAAD,CAAUC,KAAV,CAAoB,CAC5D,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,GAAL,CAAS,IAAT,CAAeH,KAAK,CAAG,CAAvB,CAAnB,CACA,GAAMI,CAAAA,UAAU,CAAGH,UAAU,CAAGA,UAAU,CAAG,EAA7C,CACA,MAAQL,CAAAA,MAAM,CAAGK,UAAT,EAAuBL,MAAM,CAAGQ,UAAxC,CACD,CAJ8B,CAA/B,CAKA,GAAMC,CAAAA,MAAM,CAAGR,sBAAsB,CAAG,CAAH,CAAO,CAA5C,CACA,IAAK,GAAIS,CAAAA,CAAC,CAAGZ,KAAK,CAACa,MAAN,CAAe,CAA5B,CAA+BD,CAAC,EAAI,CAApC,CAAuCA,CAAC,EAAxC,CAA4C,CAC1C,GAAME,CAAAA,OAAO,CAAGN,IAAI,CAACC,GAAL,CAAS,IAAT,CAAeG,CAAC,CAAG,CAAnB,CAAhB,CAEA,GAAIV,MAAM,EAAIY,OAAd,CAAuB,CACrB,MAAO,CAACZ,MAAM,CAAGY,OAAV,EAAmBC,OAAnB,CAA2BJ,MAA3B,EAAqCX,KAAK,CAACY,CAAD,CAAjD,CACD,CACF,CACD,MAAOV,CAAAA,MAAM,CAACc,QAAP,EAAP,CACD","sourcesContent":["const UNITS = ['K', 'M', 'B', 'T'];\n\n// https://stackoverflow.com/a/28608086/2328833\nexport function getShortNumberString(number) {\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\n    const lowerBound = Math.pow(1000, index + 1);\n    const upperBound = lowerBound + lowerBound * 10;\n    return  number > lowerBound && number < upperBound\n  });\n  const digits = shouldShowDecimalPlace ? 1 : 0;\n  for (let i = UNITS.length - 1; i >= 0; i--) {\n    const decimal = Math.pow(1000, i + 1);\n\n    if (number >= decimal) {\n      return (number / decimal).toFixed(digits) + UNITS[i];\n    }\n  }\n  return number.toString();\n}"]},"metadata":{},"sourceType":"module"}